@model Contracts.Bookmark.Requests.CreateBookmarkRequest

@{
    ViewBag.Title = "Create";
}

<h2>Create Bookmark</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Bookmark</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">

            @* URL *@
            @Html.LabelFor(model => model.Url, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
            </div>

            @* SHORT DESCRIPTION *@
            @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ShortDescription, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
            </div>

            @* CATEGORY *@
            <label class="control-label col-md-2">Choose a category</label>
            <div class="col-md-10">
                <select class="form-control" id="categorySelect" name="CategoryId">
                    @{
                        foreach (Queries.Features.Category.GetCategories.CategoryDto category
                            in ViewBag.Categories as IEnumerable<Queries.Features.Category.GetCategories.CategoryDto>)
                        {
                            <option value="@category.Id">@category.Name</option>
                        }

                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>

}

<h2>Create category</h2>
<form id="createCategoryForm">

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Category</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2">Name</label>
            <div class="col-md-10">
                <input type="text" id="categoryName" class="form-control" name="Name" required />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>

</form>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts
{
    <script src="~/lib/jquery/dist/jquery.min.js"></script>

    <script>

        $(document).ready(() => {
            $('#createCategoryForm').submit((event) => {

                event.preventDefault();

                const name = $('#categoryName').val();
                const token = $('input[name="__RequestVerificationToken"]').val();

                $.ajax({
                    url: '/Categories/Create',
                    type: 'POST',
                    data: {
                        Name: name,
                        __RequestVerificationToken: token
                    },
                    success: () => {
                        $.ajax({
                            url: '/Categories/GetCategoryByName',
                            type: 'GET',
                            data: { name: name },
                            success: (result) => {
                                $('#categorySelect').append(new Option(result.name, result.id));
                            }
                        });

                        $('#categoryName').val('');
                    }
                })
            });
        });

    </script>
}